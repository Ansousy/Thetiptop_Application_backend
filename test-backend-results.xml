<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.4530" tests="14" failures="0">
  <testsuite name="Root Suite" timestamp="2022-05-26T16:11:51" tests="1" time="0.0000" failures="0">
    <testcase name="should return phone number invalid when user data is not valid" time="0.0480" classname="should return phone number invalid when user data is not valid">
    </testcase>
  </testsuite>
  <testsuite name="GET  user by id" timestamp="2022-05-26T16:11:51" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0540" failures="0">
    <testcase name="GET  user by id should return an user if valid id is passed" time="0.0530" classname="should return an user if valid id is passed">
    </testcase>
  </testsuite>
  <testsuite name="Get id user not exist  " timestamp="2022-05-26T16:11:51" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Try to get  user by Id not exist" timestamp="2022-05-26T16:11:51" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0080" failures="0">
    <testcase name="Get id user not exist   Try to get  user by Id not exist should return 404 error when valid object id is passed but does not exist" time="0.0070" classname="should return 404 error when valid object id is passed but does not exist">
    </testcase>
  </testsuite>
  <testsuite name="POST / authenticate user" timestamp="2022-05-26T16:11:51" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0570" failures="0">
    <testcase name="POST / authenticate user should connect succesfully an user" time="0.0560" classname="should connect succesfully an user">
    </testcase>
  </testsuite>
  <testsuite name="PUT /:id user" timestamp="2022-05-26T16:11:51" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0330" failures="0">
    <testcase name="PUT /:id user should update the existing user and return status 200" time="0.0320" classname="should update the existing user and return status 200">
    </testcase>
  </testsuite>
  <testsuite name="POST / invalid authentication" timestamp="2022-05-26T16:11:52" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Reject invalid authentication" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0080" failures="0">
    <testcase name="POST / invalid authentication Reject invalid authentication should not connect an user and return 404" time="0.0080" classname="should not connect an user and return 404">
    </testcase>
  </testsuite>
  <testsuite name="POST / Add user " timestamp="2022-05-26T16:11:52" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Add new user" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.1320" failures="0">
    <testcase name="POST / Add user  Add new user It should add succesfully an new user" time="0.1310" classname="It should add succesfully an new user">
    </testcase>
  </testsuite>
  <testsuite name=" POST /Add user already exist" timestamp="2022-05-26T16:11:52" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Add user already exist" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0110" failures="0">
    <testcase name=" POST /Add user already exist Add user already exist should return 409 conflicted when user exists" time="0.0090" classname="should return 409 conflicted when user exists">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /:id user" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0200" failures="0">
    <testcase name="DELETE /:id user should delete successfuly user by id and return response" time="0.0200" classname="should delete successfuly user by id and return response">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /:id when user already not exit" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0030" failures="0">
    <testcase name="DELETE /:id when user already not exit should return 404 when user is already deleted or id user does not exist" time="0.0020" classname="should return 404 when user is already deleted or id user does not exist">
    </testcase>
  </testsuite>
  <testsuite name="POST / connect user who does not activated account" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0100" failures="0">
    <testcase name="POST / connect user who does not activated account should not allow user to login if account is not active" time="0.0080" classname="should not allow user to login if account is not active">
    </testcase>
  </testsuite>
  <testsuite name="GET / Add gain and display list Earning user" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0270" failures="0">
    <testcase name="GET / Add gain and display list Earning user It should save ticket and return earning" time="0.0260" classname="It should save ticket and return earning">
    </testcase>
  </testsuite>
  <testsuite name="POST / Check a valid ticket" timestamp="2022-05-26T16:11:52" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Check a valid ticket" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0310" failures="0">
    <testcase name="POST / Check a valid ticket Check a valid ticket Should not found the ticket an return 404" time="0.0310" classname="Should not found the ticket an return 404">
    </testcase>
  </testsuite>
  <testsuite name="GET/ Tickets" timestamp="2022-05-26T16:11:52" tests="0" file="D:\thetitop\backend\test\ac1-test.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="get tickets repartions" timestamp="2022-05-26T16:11:52" tests="1" file="D:\thetitop\backend\test\ac1-test.js" time="0.0050" failures="0">
    <testcase name="GET/ Tickets get tickets repartions should get list of  tickets repartitions" time="0.0050" classname="should get list of  tickets repartitions">
    </testcase>
  </testsuite>
</testsuites>